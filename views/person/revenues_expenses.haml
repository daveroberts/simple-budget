%span= link_to "Jan", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>1, :from_day=>1, :to_year=>Time.now.year, :to_month=>1, :to_day=>31)
%span= link_to "Feb", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>2, :from_day=>1, :to_year=>Time.now.year, :to_month=>2, :to_day=>29)
%span= link_to "Mar", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>3, :from_day=>1, :to_year=>Time.now.year, :to_month=>3, :to_day=>31)
%span= link_to "Apr", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>4, :from_day=>1, :to_year=>Time.now.year, :to_month=>4, :to_day=>30)
%span= link_to "May", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>5, :from_day=>1, :to_year=>Time.now.year, :to_month=>5, :to_day=>31)
%span= link_to "Jun", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>6, :from_day=>1, :to_year=>Time.now.year, :to_month=>6, :to_day=>30)
%span= link_to "Jul", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>7, :from_day=>1, :to_year=>Time.now.year, :to_month=>7, :to_day=>31)
%span= link_to "Aug", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>8, :from_day=>1, :to_year=>Time.now.year, :to_month=>8, :to_day=>31)
%span= link_to "Sep", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>9, :from_day=>1, :to_year=>Time.now.year, :to_month=>9, :to_day=>30)
%span= link_to "Oct", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>10, :from_day=>1, :to_year=>Time.now.year, :to_month=>10, :to_day=>31)
%span= link_to "Nov", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>11, :from_day=>1, :to_year=>Time.now.year, :to_month=>11, :to_day=>30)
%span= link_to "Dec", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>12, :from_day=>1, :to_year=>Time.now.year, :to_month=>12, :to_day=>31)
%br/
%span= link_to "Year to Date", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>1, :from_day=>1, :to_year=>Time.now.year, :to_month=>Time.now.month, :to_day=>Time.now.day)
%span= link_to "Month to Date", profit_between_url(:id=>@person.id, :from_year=>Time.now.year, :from_month=>Time.now.month, :from_day=>1, :to_year=>Time.now.year, :to_month=>Time.now.month, :to_day=>Time.now.day)
%div= render :partial => 'date/range', :locals => { :from_date => @from_date, :to_date=>@to_date, :id=>@person.id }
%h1== Revenues and Expenses for #{@person.name}
%table{:style=>"width: 100%;"}
  %thead
    %tr
      %th Date
      %th Description
      %th Revenues
      %th Expenses
      %th Paid By
      %th Tags
  %tbody
    - total = 0
    - revenue = 0
    - expenses = 0
    - for entry in @entries
      %tr{:class => cycle("even", "odd")}
        %td= entry.date
        %td
          = edit_entry_link entry.id
          = entry.description
        - total += entry.share.to_f
        - if entry.share.to_f > 0
          - revenue += entry.share.to_f
          %td{:class=>"green"}= number_to_currency(entry.share)
          %td
        - else
          - expenses += entry.share.to_f
          %td
          %td{:class=>"red"}= number_to_currency(entry.share)
        %td= link_to "#{entry.charged_to.owner.name}'s #{entry.charged_to.name}", :controller=>:account, :action=>:cash_flow, :id=>entry.charged_to.id
        %td= entry.tag == nil ? "Untagged" : entry.tag.name
    %tr{:class => "total"}
      %td Totals
      %td
      %td{:class=>"green"}= number_to_currency(revenue)
      %td{:class=>"red"}= number_to_currency(expenses)
      %td
      %td
%p
  %span== Profit / Loss: #{number_to_currency(total)}
  - if @from_date != nil && @to_date != nil
    %span== for #{@from_date} to #{@to_date}

%h2 Monies Payable / Receivable
- for person_id,owed in @debts
  - p = Person.find(person_id)
  - if owed > 0
    %span== #{@person.name} owes #{p.name} #{number_to_currency(owed)}
  - else
    %span== #{p.name} owes #{@person.name} #{number_to_currency(owed.abs)}